{"ast":null,"code":"import { createElementVNode as _createElementVNode, vModelText as _vModelText, withDirectives as _withDirectives, renderList as _renderList, Fragment as _Fragment, openBlock as _openBlock, createElementBlock as _createElementBlock, toDisplayString as _toDisplayString, createTextVNode as _createTextVNode } from \"vue\";\nconst _hoisted_1 = [\"onClick\"];\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  return _openBlock(), _createElementBlock(\"div\", null, [_cache[2] || (_cache[2] = _createElementVNode(\"h2\", null, \"Cadastro de Clientes\", -1 /* HOISTED */)), _withDirectives(_createElementVNode(\"input\", {\n    \"onUpdate:modelValue\": _cache[0] || (_cache[0] = $event => $data.nome = $event),\n    placeholder: \"Nome do Cliente\"\n  }, null, 512 /* NEED_PATCH */), [[_vModelText, $data.nome]]), _createElementVNode(\"button\", {\n    onClick: _cache[1] || (_cache[1] = (...args) => $options.adicionarCliente && $options.adicionarCliente(...args))\n  }, \"Adicionar\"), _createElementVNode(\"ul\", null, [(_openBlock(true), _createElementBlock(_Fragment, null, _renderList($data.clientes, cliente => {\n    return _openBlock(), _createElementBlock(\"li\", {\n      key: cliente.id\n    }, [_createTextVNode(_toDisplayString(cliente.nome) + \" \", 1 /* TEXT */), _createElementVNode(\"button\", {\n      onClick: $event => $options.editar(cliente)\n    }, \"Editar\", 8 /* PROPS */, _hoisted_1)]);\n  }), 128 /* KEYED_FRAGMENT */))])]);\n}","map":{"version":3,"names":["_createElementBlock","_createElementVNode","$data","nome","$event","placeholder","onClick","_cache","args","$options","adicionarCliente","_Fragment","_renderList","clientes","cliente","key","id","editar","_hoisted_1"],"sources":["C:\\projetos\\2025-1-A3-UDWMJ-FAPA-12-Jean\\frontend\\src\\views\\Clientes.vue"],"sourcesContent":["<template>\r\n  <div>\r\n    <h2>Cadastro de Clientes</h2>\r\n    <input v-model=\"nome\" placeholder=\"Nome do Cliente\" />\r\n    <button @click=\"adicionarCliente\">Adicionar</button>\r\n\r\n    <ul>\r\n      <li v-for=\"cliente in clientes\" :key=\"cliente.id\">\r\n        {{ cliente.nome }}\r\n        <button @click=\"editar(cliente)\">Editar</button>\r\n      </li>\r\n    </ul>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport api from '../services/api'\r\n\r\nexport default {\r\n  data() {\r\n    return {\r\n      nome: '',\r\n      clientes: []\r\n    }\r\n  },\r\n  methods: {\r\n    async listarClientes() {\r\n      const response = await api.get('/clientes')\r\n      this.clientes = response.data\r\n    },\r\n    async adicionarCliente() {\r\n      if (this.nome.trim()) {\r\n        await api.post('/clientes', { nome: this.nome })\r\n        this.nome = ''\r\n        this.listarClientes()\r\n      }\r\n    },\r\n    editar(cliente) {\r\n      this.nome = cliente.nome\r\n      // Aqui você pode adicionar lógica para PUT\r\n    }\r\n  },\r\n  mounted() {\r\n    this.listarClientes()\r\n  }\r\n}\r\n</script>\r\n"],"mappings":";;;uBACEA,mBAAA,CAWM,c,0BAVJC,mBAAA,CAA6B,YAAzB,sBAAoB,sB,gBACxBA,mBAAA,CAAsD;+DAAtCC,KAAA,CAAAC,IAAI,GAAAC,MAAA;IAAEC,WAAW,EAAC;iDAAlBH,KAAA,CAAAC,IAAI,E,GACpBF,mBAAA,CAAoD;IAA3CK,OAAK,EAAAC,MAAA,QAAAA,MAAA,UAAAC,IAAA,KAAEC,QAAA,CAAAC,gBAAA,IAAAD,QAAA,CAAAC,gBAAA,IAAAF,IAAA,CAAgB;KAAE,WAAS,GAE3CP,mBAAA,CAKK,c,kBAJHD,mBAAA,CAGKW,SAAA,QAAAC,WAAA,CAHiBV,KAAA,CAAAW,QAAQ,EAAnBC,OAAO;yBAAlBd,mBAAA,CAGK;MAH4Be,GAAG,EAAED,OAAO,CAACE;0CACzCF,OAAO,CAACX,IAAI,IAAG,GAClB,iBAAAF,mBAAA,CAAgD;MAAvCK,OAAK,EAAAF,MAAA,IAAEK,QAAA,CAAAQ,MAAM,CAACH,OAAO;OAAG,QAAM,iBAAAI,UAAA,E","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}